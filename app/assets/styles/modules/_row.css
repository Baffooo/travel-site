.row {

	@mixin clearfix;
	
	/* It balances the 80px position relative of the testimonials' images */
	&--t-padding {
		padding-top: 80px;
	}

	/* It removes the padding on the right of the last element (the text) */
	&--gutters {
		padding-right: -65px;
	}

	&--gutters-small {
		margin-right: -45px;
	}

	&--gutters-large {
		margin-right: -100px;
	}

	/*
		With the "> div" we're not applying the modifier to this element in which we add the class.
		Instead, we're applying the modifier to all of its "div" children.
	*/
	&--gutters > div {
		padding-right: 65px;
	}

	&--gutters-small > div {
		padding-right: 45px;
	}

	&--gutters-large > div {
		padding-right: 100px;
	}

	&__b-margin-until-medium {
		margin-bottom: 1rem;
	}

	@mixin atMedium {
		/*
		When we have a small/mobile width, each element will use the total width. 
		When the width gets larger, we imagine to split the row in 12 columns:
		- the first element (image) will cover 4 columns of the row (on the left)
		- the second element (text) will cover 8 columns of the row (after the first element)
		*/

		&__b-margin-until-medium {
			margin-bottom: 0;
		}

		&__medium-4 {
			float: left;
			width: 33.33%; /* (100/12)*4 */
		}

		&__medium-4--larger {
			width: 37%;
		}

		&__medium-6 {
			float: left;
			width: 50%;
		}

		&__medium-8 {
			float: left;
			width: 66.66%; /* (100/12)*8 */
		}

		&__medium-8--smaller {
			width: 63%;
		}
	}

	@mixin atLarge {
		/*
		When we have a small/mobile width, each element will use the total width. 
		When the width gets larger, we imagine to split the row in 12 columns:
		- the first element (image) will cover 4 columns of the row (on the left)
		- the second element (text) will cover 8 columns of the row (after the first element)
		*/

		&__b-margin-until-large {
			margin-bottom: 0;
		}

		&__large-4 {
			float: left;
			width: 33.33%; /* (100/12)*4 */
		}

		&__large-4--larger {
			width: 37%;
		}

		&__large-6 {
			float: left;
			width: 50%;
		}

		&__large-8 {
			float: left;
			width: 66.66%; /* (100/12)*8 */
		}

		&__large-8--smaller {
			width: 63%;
		}
	}


	/* Begin Equal Height Rules */
	&--equal-height-at-medium {
		@mixin atMedium {
			display: flex;
		}
		
		/*
		In the following way all the div children of the row, will stop to float atMedium and start to use flexbox.
		Due to this action, all the div heights will be the same, by matching the tallest of them.
		*/
		& > div {
			float: none;
			display: flex;
		}
	}

	&--equal-height-at-large {
		@mixin atLarge {
			display: flex;
		}
		
		/*
		In the following way all the div children of the row, will stop to float atLarge and start to use flexbox.
		Due to this action, all the div heights will be the same, by matching the tallest of them.
		*/
		& > div {
			float: none;
			display: flex;
		}
	}

}